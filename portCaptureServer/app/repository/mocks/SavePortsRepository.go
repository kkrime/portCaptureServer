// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	context "context"
	entity "portCaptureServer/app/entity"

	mock "github.com/stretchr/testify/mock"
)

// SavePortsRepository is an autogenerated mock type for the SavePortsRepository type
type SavePortsRepository struct {
	mock.Mock
}

// SavePort provides a mock function with given fields: ctx, port
func (_m *SavePortsRepository) SavePort(ctx context.Context, port *entity.Port) error {
	ret := _m.Called(ctx, port)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.Port) error); ok {
		r0 = rf(ctx, port)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSavePortsRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewSavePortsRepository creates a new instance of SavePortsRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSavePortsRepository(t mockConstructorTestingTNewSavePortsRepository) *SavePortsRepository {
	mock := &SavePortsRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
