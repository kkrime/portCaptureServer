// Code generated by mockery v2.18.0. DO NOT EDIT.

package mocks

import (
	context "context"
	entity "portCaptureServer/app/entity"

	mock "github.com/stretchr/testify/mock"

	repository "portCaptureServer/app/repository"
)

// SavePortsRepository is an autogenerated mock type for the SavePortsRepository type
type SavePortsRepository struct {
	mock.Mock
}

// SavePort provides a mock function with given fields: ctx, transaction, port
func (_m *SavePortsRepository) SavePort(ctx context.Context, transaction repository.Transaction, port *entity.Port) error {
	ret := _m.Called(ctx, transaction, port)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, repository.Transaction, *entity.Port) error); ok {
		r0 = rf(ctx, transaction, port)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StartTransaction provides a mock function with given fields:
func (_m *SavePortsRepository) StartTransaction() (repository.Transaction, error) {
	ret := _m.Called()

	var r0 repository.Transaction
	if rf, ok := ret.Get(0).(func() repository.Transaction); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSavePortsRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewSavePortsRepository creates a new instance of SavePortsRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSavePortsRepository(t mockConstructorTestingTNewSavePortsRepository) *SavePortsRepository {
	mock := &SavePortsRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
