// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	context "context"
	service "portCaptureServer/app/service"

	mock "github.com/stretchr/testify/mock"
)

// SavePortsServiceProvider is an autogenerated mock type for the SavePortsServiceProvider type
type SavePortsServiceProvider struct {
	mock.Mock
}

// NewSavePortsInstance provides a mock function with given fields: ctx, savePortsInstanceType
func (_m *SavePortsServiceProvider) NewSavePortsInstance(ctx context.Context, savePortsInstanceType service.SavePortsInstanceType) (service.SavePortsServiceInstance, error) {
	ret := _m.Called(ctx, savePortsInstanceType)

	var r0 service.SavePortsServiceInstance
	if rf, ok := ret.Get(0).(func(context.Context, service.SavePortsInstanceType) service.SavePortsServiceInstance); ok {
		r0 = rf(ctx, savePortsInstanceType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.SavePortsServiceInstance)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, service.SavePortsInstanceType) error); ok {
		r1 = rf(ctx, savePortsInstanceType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSavePortsServiceProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewSavePortsServiceProvider creates a new instance of SavePortsServiceProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSavePortsServiceProvider(t mockConstructorTestingTNewSavePortsServiceProvider) *SavePortsServiceProvider {
	mock := &SavePortsServiceProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
